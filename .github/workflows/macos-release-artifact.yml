jobs:
  build:
    name: Build Openfire from source
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: zulu
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      id: get-id
      name: Compute Version
      run: 'set -x

        version=$(echo ${{ github.ref }} | cut -d ''/'' -f3 | cut -c 2- | sed ''s/\./_/g'')

        echo "version=$version" >> $GITHUB_OUTPUT

        echo "version is ''$version''"

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ github.token }}
      id: get_release
      name: Get release
      uses: bruceadams/get-release@v1.3.2
    - continue-on-error: true
      name: Build with Maven
      run: ./mvnw -B package -Pcoverage --file pom.xml
    - continue-on-error: true
      name: Build Artifact
      run: 'bash build/osx/build_dmg.sh

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Push Artifact to Github Release
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/octet-stream
        asset_name: openfire_${{ steps.get-id.outputs.version }}.dmg
        asset_path: distribution/build/osx/Openfire.dmg
        upload_url: ${{ steps.get_release.outputs.upload_url }}
    strategy:
      matrix:
        java:
        - 11
name: Openfire Mac Release Artifact
on:
  repository_dispatch:
    types: trigger-ga___macos-release-artifact.yml
